Estamos bloqueados por dos fallos críticos que antes ya funcionaban y ahora nos impiden avanzar: ni se puede iniciar sesión ni registrarse. Esto hay que corregir ya, siguiendo estas instrucciones muy específicas:

1. RESTABLECER EL REGISTRO DE USUARIO
Ruta de registro: debe existir y estar activa POST /api/auth/register.

Validación del payload: recibir al menos name, email y password.

Flujo esperado:

Valida que el email no exista.

Crea el usuario en la base de datos.

Devuelve un token o cookie de sesión + datos del usuario.

Frontend debe recibir el token y redirigir automáticamente al dashboard correspondiente.

Errores a evitar:

No debe responder 404 ni 500.

Si hay errores de validación, debe devolver 400 con mensaje claro (por ejemplo “Email ya registrado”).

2. RESTABLECER EL INICIO DE SESIÓN
Ruta de login: debe existir y estar activa POST /api/auth/login.

Validación del payload: recibir email y password.

Flujo esperado:

Valida credenciales contra la base de datos.

Emite el token o cookie de sesión con Domain=.midominio.com; SameSite=None; Secure.

Devuelve datos del usuario (incluido su rol) para que el frontend lo reciba y redirija.

Errores a evitar:

No responder 404 (ruta no encontrada).

No responder 401 sin explicar (“Credenciales incorrectas”).

No “botar” al navegador de Replit.

3. FRONTEND: VALIDACIÓN Y SUBIDA DE FORMULARIOS
Formulario de registro y login:

Campos requeridos marcados claramente.

Al hacer submit, enviar a la URL absoluta del backend (https://midominio.com/api/...) con withCredentials: true.

Feedback en UI:

Mientras la petición está en curso, mostrar un spinner o estado “Cargando…”.

Al error, mostrar mensaje inline (“Email inválido”, “Contraseña incorrecta”, “Error de servidor”).

Redirección:

Tras registro exitoso, redirigir a /dashboard según rol.

Tras login exitoso, redirigir a doctor.midominio.com/dashboard o paciente.midominio.com/dashboard según corresponda.

4. COMPROBACIONES CON CURL / POSTMAN
Antes de probar en UI, confirma que ambos endpoints funcionen con estas pruebas:

bash
Copiar
Editar
# Registro
curl -v -X POST https://midominio.com/api/auth/register \
  -H "Content-Type: application/json" \
  -d '{"name":"Juan Pérez","email":"juan@ejemplo.com","password":"Abc123!"}'

# Login
curl -v -X POST https://midominio.com/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email":"juan@ejemplo.com","password":"Abc123!"}'
Respuesta esperada: 200 OK + JSON con token y user (con rol).

Cookie: revisa que la cookie venga con Domain=.midominio.com.

5. CORS Y PROXY
CORS backend: permitir https://midominio.com y todos los subdominios con credentials: true.

Desarrollo (Vite/Proxy): asegurar que /api/* se proxée a http://localhost:3000 para evitar errores de red.

